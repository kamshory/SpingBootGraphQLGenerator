let stringUtil=new StringUtil,generator=new GraphQLSpringGenerator,sqlParser=new SQLParser,util=new GraphQLSchemaUtils,entityRenderer,updatedWidth=600,drawRelationship=!0;function autopopulateDriverAndDialect(e){let t=document.getElementById("dbDriver"),a=document.getElementById("dbDialect");e.startsWith("jdbc:mysql:")?(t.value="com.mysql.cj.jdbc.Driver",a.value="org.hibernate.dialect.MySQL8Dialect"):e.startsWith("jdbc:mariadb:")?(t.value="org.mariadb.jdbc.Driver",a.value="org.hibernate.dialect.MariaDBDialect"):e.startsWith("jdbc:postgresql:")?(t.value="org.postgresql.Driver",a.value="org.hibernate.dialect.PostgreSQLDialect"):e.startsWith("jdbc:sqlite:")?(t.value="org.sqlite.JDBC",a.value="org.hibernate.dialect.SQLiteDialect"):e.startsWith("jdbc:oracle:")?(t.value="oracle.jdbc.OracleDriver",a.value="org.hibernate.dialect.Oracle12cDialect"):e.startsWith("jdbc:sqlserver:")?(t.value="com.microsoft.sqlserver.jdbc.SQLServerDriver",a.value="org.hibernate.dialect.SQLServer2012Dialect"):e.startsWith("jdbc:h2:")?(t.value="org.h2.Driver",a.value="org.hibernate.dialect.H2Dialect"):e.startsWith("jdbc:derby:")?(t.value="org.apache.derby.jdbc.EmbeddedDriver",a.value="org.hibernate.dialect.DerbyDialect"):e.startsWith("jdbc:db2:")?(t.value="com.ibm.db2.jcc.DB2Driver",a.value="org.hibernate.dialect.DB2Dialect"):e.startsWith("jdbc:firebird:")?(t.value="org.firebirdsql.jdbc.FBDriver",a.value="org.hibernate.dialect.FirebirdDialect"):e.startsWith("jdbc:sybase:")&&(t.value="com.sybase.jdbc4.jdbc.SybDriver",a.value="org.hibernate.dialect.SybaseDialect")}function autopopulatePackage(e){let t=document.getElementById("groupId"),a=document.getElementById("artifactId"),r=document.getElementById("serviceName"),i=e.trim();if(!i){t.value="",a.value="",r.value="";return}t.value=i;let l=i.split("."),d=l[l.length-1];a.value=d,r.value=d.split(/[-_]/).map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ")}function applyModel(e){let t=document.getElementById("maxRelationDepth"),a=Math.max(...e.entities.map(e=>e.depth))-1;t.value=a,generator.setModel(e)}let resizeTimeout;window.addEventListener("resize",()=>{clearTimeout(resizeTimeout),resizeTimeout=setTimeout(()=>{let e=document.querySelector(".erd-wrapper");if(e){let t=e.clientWidth;entityRenderer.createERD(generator.getModel(),t,drawRelationship)}},300)}),document.addEventListener("DOMContentLoaded",()=>{let e=document.getElementById("configForm"),t=document.getElementById("packageName"),a=document.getElementById("dbUrl"),r=document.getElementById("sqlFile");entityRenderer=new EntityRenderer(".erd-svg");let i=document.querySelector(".erd-wrapper");i&&(updatedWidth=i.clientWidth),t.addEventListener("change",function(e){autopopulatePackage(e.target.value)}),t.addEventListener("keyup",function(e){autopopulatePackage(e.target.value)}),a.addEventListener("change",function(e){autopopulateDriverAndDialect(e.target.value)}),a.addEventListener("keyup",function(e){autopopulateDriverAndDialect(e.target.value)}),r.addEventListener("change",function(t){let a=new FormData(e),r=a.get("sqlFile");r&&sqlParser.importSQLFile(r,e=>{applyModel(e),entityRenderer.createERD(e,updatedWidth,drawRelationship)})});let l=new FormData(e),d=l.get("sqlFile");d&&sqlParser.importSQLFile(d,e=>{applyModel(e),entityRenderer.createERD(e,updatedWidth,drawRelationship)}),e.addEventListener("submit",t=>{t.preventDefault();let a=new FormData(e),r={packageName:a.get("packageName"),groupId:a.get("groupId"),artifactId:a.get("artifactId"),serviceName:a.get("serviceName"),serviceDescription:a.get("serviceDescription"),javaVersion:a.get("javaVersion"),version:a.get("version"),maxRelationDepth:parseInt(a.get("maxRelationDepth"))||3};generator.createZipFile(null,r,document.querySelector("#artifactId").value+".zip")})});